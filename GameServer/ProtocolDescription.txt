Описание синтаксиса запросов протокола передачи:
----------------------------------------------------------------------------------------------------
1. REGISTER:
клиент->сервер: Запрос на регистрацию нового пользователя. Следом высылаются все необходимые данные:
* NickName
* Password
* RealName
После получения такого запроса и данных сервер проверяет на совпадение в БД NickName.

сервер->клиент: Если совпадений нет, сервер обратно отсылает ответ об успешности регистрации. Запись
добавляется в БД.
Если совпадения были найдены, сервер отсылает сообщение об ошибке.
----------------------------------------------------------------------------------------------------
2. AUTHORIZATION:
клиент->сервер: Запрос на авторизацию в системе. Высылаются Nickname и Password.

сервер->клиент: Сервер проверяет совпадение высланных данных с БД и отсылает ответ об успешной
авторизации. В противном случае высылается сообщение об ошибке.
----------------------------------------------------------------------------------------------------
3. MESSANGE:
клиент->сервер: Запрос на обработку сообщения, которое было отправлено в чат.

сервер->клиент: Ретрансляция полученного сообщения остальным подключенным клиентам.
----------------------------------------------------------------------------------------------------
4. NEWGAME:
клиент->сервер: Запрос на создание новой игры. Высылается количество человек, которое будет принимать
участие в игре (от 2-х до 4-х).

сервер->клиент: Подготавливает необходимые данные для запуска игры. Ретранслирует всем подключенным
клиентам изменения в списке новых игр.
----------------------------------------------------------------------------------------------------
5. CONNECTGAME:
клиент->сервер: Запрос на подключение к созданной игре.

сервер->клиент: Добавляет игрока в список к играющим в конкретной игре. Ретранслирует всем клиентам
измененные данные.
----------------------------------------------------------------------------------------------------
6. DISCONNECTGAME:
клиент->сервер: Запрос на отключение от созданной игры.

сервер->клиент: Исключает игрока из списка  играющих конкретной игры. Ретранслирует всем клиентам
измененные данные.
----------------------------------------------------------------------------------------------------
7. CANCELGAME:
клиент->сервер: Запрос на отмену созданной игры. Возможна только до момента запуска.

сервер->клиент: Убирает все данные о созданной игре, исключает подключенных игроков. Отсылает этим
игрокам сообщения в чат об отмене игры.
----------------------------------------------------------------------------------------------------
8. STARTGAME:
клиент->сервер: Запрос на начало игры.

сервер->клиент: Запускает отдельный поток для игры. Отсылает всем играющим информацию о начале игры,
в частности сообщение в чат о времени старта по серверу.
----------------------------------------------------------------------------------------------------
9. FINISHGAME:
сервер->клиент: Запрос об окончании игры. У каждого играющего высвечивается таблица с результатами
игры и в чат приходит об окончании игры.
----------------------------------------------------------------------------------------------------
10. LISTALLGAME:
клиент->сервер: Запрос на получения списка всех активных игр.

сервер->клиент: Отсылает список всех активных игр с необходимой информацией
----------------------------------------------------------------------------------------------------
11. LISTALLNEWGAME:
клиент->сервер: Запрос на получение полного списка созданных игр, которые ожидают запуска и есть еще
свободные места для игроков.

сервер->клиент: Отсылает список созданных игр, состав участников которых еще не полон.
----------------------------------------------------------------------------------------------------
12. TOTALSTATISTICS:
клиент->сервер: Запрос на получение статистических данных по всему серверу. Данные включают в себя
информацию о всех зарегистрированных на данных момент пользователей и всю информация о них.

сервер->клиент: Отсылает соответствующую инофрмацию клиенту.
----------------------------------------------------------------------------------------------------
13. PLAYERSTATISTICS:
клиент->сервер: Запрос на получение данных о конкретном игроке.

сервер->клиент: Отсылает всю необходимую информацию о запрошенном игроке либо информацию об ошибке,
если нет такого зарегистрированного игрока.
----------------------------------------------------------------------------------------------------
14. MOVE:
клиент->сервер: Отсылает данные о сделанном игроком ходе.

сервер->клиент: Ретранлирует всем остальным клиентам, задействованным в данной игре информацию о
выполненном ходе.
----------------------------------------------------------------------------------------------------
Структура, описывающая запросы, которыми обмениваются клиент и сервер:
* socketDescriptor - дескриптор сокета, посредством которого осуществляется конкретное соединение, по
которому передается запрос;
* type - тип запроса. Выбирается один из выше перечисленных;
* size - размер данных, которые будут переданы после запроса.
